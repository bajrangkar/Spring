<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"		
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-2.5.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
    <context:annotation-config/>
	<aop:aspectj-autoproxy />
	<bean id="log" class="com.spring.aop.LogService"/>
	<bean id="security" class="com.spring.aop.SecurityService"/>
	
	<bean id="hello" class="com.spring.aop.HelloServiceImpl" />
	<bean id="hai" class="com.spring.aop.HaiServiceImpl"/>
	
	<aop:config>
	<aop:pointcut id="JavaPC" expression="execution(* com.spring.aop.*Service.m*())"/>
	<aop:aspect ref="log">
	<aop:before method="logBegin" pointcut-ref="JavaPC"/>
	<aop:after-returning method="logEnd" pointcut-ref="JavaPC"/>
	<aop:after-throwing method="logException" pointcut-ref="JavaPC"/>
	<aop:after method="logOk" pointcut-ref="JavaPC"/>
	</aop:aspect>
	<aop:aspect ref="security">
	<aop:before method="verifyUser" pointcut-ref="JavaPC"/>
	</aop:aspect>
	</aop:config>
</beans>
